#! /usr/bin/env python
#
# GUI module generated by PAGE version 4.9
# In conjunction with Tcl version 8.6
#    Aug 02, 2017 04:22:23 PM
import sys

try:
    from Tkinter import *
    from tkinter.messagebox import*
except ImportError:
    from tkinter import *
    from tkinter.messagebox import*

try:
    import ttk
    py3 = 0
except ImportError:
    import tkinter.ttk as ttk
    py3 = 1

import Main_ecr_support
import time
import datetime
from tkinter.messagebox import*

sec=0
date = datetime.datetime.now()
mois={'1':'Janvier','2':'Fevrier','3':'Mars','4':'Avril','5':'Mai','6':'Juin',
      '7':'Juillet','8':'Aout','9':'Septembre','10':'Octobre','11':'Novembre','12':'Décembre'}
m=str(date.month)

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    Main_ecr_support.set_Tk_var()
    top = Connexion (root)
    Main_ecr_support.init(root, top)
    root.mainloop()

w = None
def create_Connexion(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    Main_ecr_support.set_Tk_var()
    top = Connexion (w)
    Main_ecr_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Connexion():
    global w
    w.destroy()
    w = None


class Connexion:
    def compteseconde():
        global sec
        # on arrive ici toutes les 1000 ms
        sec=sec+1
        Main_ecr_support.cmpte.set('%d' %sec )
        root.after(1000,Connexion.compteseconde)
        if sec>60:
            root.destroy()
    def maj():
        Main_ecr_support.heure.set(time.strftime('%H:%M:%S'))
        root.after(1000,Connexion.maj)
    def __init__(self, top=None):
        
        def pointeur(event):
                    chaine.configure(text = "Clic détecté en X =" + str(event.x) +\
                            ", Y =" + str(event.y))

        def nvconnexion():
    
            Main_ecr_support.utilisateur.set("")
            Main_ecr_support.motdepasse.set("")
        
        def connexion():
            
            if  Main_ecr_support.utilisateur.get()=="admin" and Main_ecr_support.motdepasse.get()=="admin" :
                    root.destroy()
            
            else:
                
                showinfo("INFORMATION","connexion non etablie")

        def page():
            
            import Adherent
            Adherent.vp_start_gui()
            
            
            
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#d9d9d9' # X11 color: 'gray85' 

        top.geometry("600x488+300+175")
        top.title("Connexion")
        top.configure(background="#EFF0EF")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")



        self.Button1 = Button(top)
        self.Button1.place(relx=0.82, rely=0.9, height=33, width=82)
        self.Button1.configure(activebackground="#EA8144")
        self.Button1.configure(activeforeground="white")
        self.Button1.configure(background="#568203")
        self.Button1.configure(disabledforeground="#a3a3a3")
        self.Button1.configure(foreground="white")
        self.Button1.configure(highlightbackground="#d9d9d9")
        self.Button1.configure(highlightcolor="black")
        self.Button1.configure(pady="0")
        self.Button1.configure(state=ACTIVE)
        self.Button1.configure(text='''Connexion''',command=page)
        #self.Button1.bind('<Button-1>',lambda e:Main_ecr_support.connecte(e))

        self.menubar = Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)



        self.Canvas2 = Canvas(top)
        self.Canvas2.place(relx=1.65, rely=0.86, relheight=0.69, relwidth=0.8)
        self.Canvas2.configure(background="white")
        self.Canvas2.configure(borderwidth="2")
        self.Canvas2.configure(highlightbackground="#d9d9d9")
        self.Canvas2.configure(highlightcolor="black")
        self.Canvas2.configure(insertbackground="black")
        self.Canvas2.configure(relief=RIDGE)
        self.Canvas2.configure(selectbackground="#c4c4c4")
        self.Canvas2.configure(selectforeground="black")
        self.Canvas2.configure(width=473)

        self.Labelframe1 = LabelFrame(top)
        self.Labelframe1.place(relx=0.05, rely=0.25, relheight=0.6
                , relwidth=0.87)
        self.Labelframe1.configure(relief=GROOVE)
        self.Labelframe1.configure(foreground="black")
        self.Labelframe1.configure(text='''Connectez-vous''')
        self.Labelframe1.configure(background="#EFF0EF")
        self.Labelframe1.configure(highlightbackground="#d9d9d9")
        self.Labelframe1.configure(highlightcolor="black")
        self.Labelframe1.configure(width=520)

        self.Label1 = Label(self.Labelframe1)
        self.Label1.place(relx=0.02, rely=0.24, height=26, width=162)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(background="#EFF0EF")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(text='''Nom utilisateur''')

        self.Label2 = Label(self.Labelframe1)
        self.Label2.place(relx=0.02, rely=0.58, height=26, width=162)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(activeforeground="black")
        self.Label2.configure(background="#EFF0EF")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="black")
        self.Label2.configure(text='''Mot de passe''')

        self.Entry1 = Entry(self.Labelframe1)
        self.Entry1.place(relx=0.46, rely=0.24, relheight=0.08, relwidth=0.39)
        self.Entry1.configure(background="white")
        self.Entry1.configure(disabledforeground="#a3a3a3")
        self.Entry1.configure(font="TkFixedFont")
        self.Entry1.configure(foreground="#000000")
        self.Entry1.configure(highlightbackground="#d9d9d9")
        self.Entry1.configure(highlightcolor="black")
        self.Entry1.configure(insertbackground="black")
        self.Entry1.configure(selectbackground="#c4c4c4")
        self.Entry1.configure(selectforeground="black")
        self.Entry1.configure(textvariable=Main_ecr_support.utilisateur)

        self.Entry2 = Entry(self.Labelframe1)
        self.Entry2.place(relx=0.46, rely=0.58, relheight=0.08, relwidth=0.39)
        self.Entry2.configure(background="white")
        self.Entry2.configure(disabledforeground="#a3a3a3")
        self.Entry2.configure(font="TkFixedFont")
        self.Entry2.configure(foreground="#000000")
        self.Entry2.configure(highlightbackground="#d9d9d9")
        self.Entry2.configure(highlightcolor="black")
        self.Entry2.configure(insertbackground="black")
        self.Entry2.configure(selectbackground="#c4c4c4")
        self.Entry2.configure(selectforeground="black")
        self.Entry2.configure(textvariable=Main_ecr_support.motdepasse)

        self.Labelframe5 = LabelFrame(top)
        self.Labelframe5.place(relx=0.05, rely=0.08, relheight=0.13
                , relwidth=0.87)
        self.Labelframe5.configure(relief=GROOVE)
        self.Labelframe5.configure(foreground="black")
        self.Labelframe5.configure(text='''Information/système''')
        self.Labelframe5.configure(background="#EFF0EF")
        self.Labelframe5.configure(highlightbackground="#d9d9d9")
        self.Labelframe5.configure(highlightcolor="black")
        self.Labelframe5.configure(width=920)

        self.Label12 = Label(self.Labelframe5)
        self.Label12.place(relx=0.80, rely=0.4, height=26, width=45)
        self.Label12.configure(activebackground="#f9f9f9")
        self.Label12.configure(activeforeground="black")
        self.Label12.configure(background="#EFF0EF")
        self.Label12.configure(disabledforeground="#a3a3a3")
        self.Label12.configure(foreground="#000000")
        self.Label12.configure(highlightbackground="#d9d9d9")
        self.Label12.configure(highlightcolor="black")
        self.Label12.configure(text='''Heure''')
        self.Label12.configure(textvariable=Main_ecr_support.heure)
        Connexion.maj()

        self.Label16 = Label(self.Labelframe5)
        self.Label16.place(relx=0.18, rely=0.4, height=26, width=45)
        self.Label16.configure(activebackground="#f9f9f9")
        self.Label16.configure(activeforeground="black")
        self.Label16.configure(background="#EFF0EF")
        self.Label16.configure(disabledforeground="#a3a3a3")
        self.Label16.configure(foreground="#000000")
        self.Label16.configure(highlightbackground="#d9d9d9")
        self.Label16.configure(highlightcolor="black")
        self.Label16.configure(text='''compte''')
        self.Label16.configure(textvariable=Main_ecr_support.cmpte)
        Connexion.compteseconde()

        self.Label17 = Label(self.Labelframe5)
        self.Label17.place(relx=0.00, rely=0.4, height=26, width=100)
        self.Label17.configure(activebackground="#f9f9f9")
        self.Label17.configure(activeforeground="black")
        self.Label17.configure(background="#EFF0EF")
        self.Label17.configure(disabledforeground="#a3a3a3")
        self.Label17.configure(foreground="#000000")
        self.Label17.configure(highlightbackground="#d9d9d9")
        self.Label17.configure(highlightcolor="black")
        self.Label17.configure(text='''compte à rebours :''')
        
        self.Label13 = Label(self.Labelframe5)
        self.Label13.place(relx=0.70, rely=0.4, height=26, width=53)
        self.Label13.configure(activebackground="#f9f9f9")
        self.Label13.configure(activeforeground="black")
        self.Label13.configure(background="#EFF0EF")
        self.Label13.configure(disabledforeground="#a3a3a3")
        self.Label13.configure(foreground="#000000")
        self.Label13.configure(highlightbackground="#d9d9d9")
        self.Label13.configure(highlightcolor="black")
        self.Label13.configure(text='''Heure :''')

        self.Label14 = Label(self.Labelframe5)
        self.Label14.place(relx=0.70, rely=0.0, height=26, width=45)
        self.Label14.configure(activebackground="#f9f9f9")
        self.Label14.configure(activeforeground="black")
        self.Label14.configure(background="#EFF0EF")
        self.Label14.configure(disabledforeground="#a3a3a3")
        self.Label14.configure(foreground="#000000")
        self.Label14.configure(highlightbackground="#d9d9d9")
        self.Label14.configure(highlightcolor="black")
        self.Label14.configure(text='''Date :''')

        self.Label15 = Label(self.Labelframe5)
        self.Label15.place(relx=0.80, rely=0.0, height=26, width=82)
        self.Label15.configure(background="#EFF0EF")
        self.Label15.configure(disabledforeground="#a3a3a3")
        self.Label15.configure(foreground="#000000")
        self.Label15.configure(text="{0} /{1} /{2}".format(date.day,mois[m],date.year))
        self.Label15.configure(width=82)






if __name__ == '__main__':
    vp_start_gui()



